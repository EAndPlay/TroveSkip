<Window x:Class="TroveSkip.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TroveSkip"
        xmlns:viewModels="clr-namespace:TroveSkip.ViewModels"
        mc:Ignorable="d"
        Title="Not a cheat" Width="354" Height="374"
        WindowStyle="None"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True"
        Background="Transparent"
        MouseDown="WindowMouseDown"
        Deactivated="WindowDeactivated">
    <!-- Left="{Binding LeftPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" -->
    <!-- Top="{Binding TopPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" -->
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <Style x:Key="CornerButtons" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="18" Height="18"
                                CornerRadius="20"
                                Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="HideButton" BasedOn="{StaticResource CornerButtons}" TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="RoyalBlue" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseButton" BasedOn="{StaticResource CornerButtons}" TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#B40000" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="FontSize" Value="14.5"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#8B8B8B"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="SelectionBrush" Value="#9835EF"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="5 2 0 0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Width" Value="192"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontFamily" Value="Lucida Sans"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style x:Key="WindowBorder" TargetType="Border">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Width" Value="202"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="CornerRadius" Value="10 10 0 0"/>
        </Style>
        <Style x:Key="SwitchButton" TargetType="Button">
            <Setter Property="Margin" Value="4 0 0 4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="55" Height="22"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#9835EF" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LabelStandard" TargetType="Label">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        <Style x:Key="NormalizedPanel" TargetType="StackPanel">
            <!-- <Setter Property="Label.Style" Value="{StaticResource LabelStandard}"/> -->
            <Setter Property="Label.HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Label.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Label.FontSize" Value="16"/>
            <Setter Property="Label.FontWeight" Value="SemiBold"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="-2 0 0 0"/>
            <Setter Property="Width" Value="96"/>
            <Setter Property="Height" Value="26.35"/>
            <Setter Property="Background" Value="#B995EF"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <Style x:Key="InvokeSearchWindowKey" TargetType="Button">
            <Setter Property="Margin" Value="3 -1 0 0"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#BE0000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Red" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FindKey" TargetType="Button">
            <Setter Property="Content" Value="FIND"/>
            <Setter Property="Margin" Value="0 75 0 0"/>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#BE0000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Red" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RadioButtonsPanel" TargetType="StackPanel">
            <Setter Property="RadioButton.Command">
                <Setter.Value>
                    <Binding Path="BotsStopTypeSwitchCommand"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Border Background="#646464" CornerRadius="0 0 10 10" Width="202" Margin="0 26 0 0" HorizontalAlignment="Left"/>
        <Border Style="{StaticResource WindowBorder}" MouseDown="DragWindow"/>
        <Button Command="{Binding HideWindowCommand}" Background="#6496F0" Margin="0 4 179 0" Style="{StaticResource HideButton}"/>
        <Button Command="{Binding CloseWindowCommand}" Background="Red" Margin="0 4 157 0" Style="{StaticResource CloseButton}"/>
        <Button Name="SwitchPage" Content="SETS" Command="{Binding SwitchPageCommand}" CommandParameter="{Binding ElementName=SwitchPage}" Background="#8233D4" Style="{StaticResource SwitchButton}"/>
        
        <Grid Visibility="{Binding MainPageVisibility}">
            <ComboBox IsEnabled="{Binding FollowApp, Converter={StaticResource InverseBooleanConverter}}" ItemsSource="{Binding Hooks}" SelectedItem="{Binding HookModel, UpdateSourceTrigger=PropertyChanged}" Margin="5 30 0 0" PreviewMouseLeftButtonDown="ClickComboBox">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Id}" TextAlignment="Center"/>
                            <TextBlock Text=" | " TextAlignment="Center"/>
                            <TextBlock Text="{Binding Name}" TextAlignment="Center"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            
            <CheckBox Content="Follow" IsChecked="{Binding FollowApp, UpdateSourceTrigger=PropertyChanged}" Margin="130 55" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            
            <StackPanel Margin="5, 55, 0, 0">
                <TextBox Text="{Binding SkipValue, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Skip" FontSize="16" FontWeight="DemiBold" Margin="17 0 0 0"/>
            </StackPanel>
            <StackPanel Margin="5 82 0 0">
                <TextBox Text="{Binding SprintValue, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding SprintCheck, UpdateSourceTrigger=PropertyChanged}">Sprint</CheckBox>
            </StackPanel>
            <StackPanel Margin="5 105 0 0">
                <TextBox Text="{Binding JumpForceValue, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding JumpCheck, UpdateSourceTrigger=PropertyChanged}">Superjump</CheckBox>
            </StackPanel>
            <StackPanel Margin="5 130 0 0">
                <!-- <ComboBox ItemsSource="{Binding SpeedList}" SelectedItem="{Binding CurrentSpeed}" Width="55" Height="22.5" FontSize="14.5" FontFamily="Consolas"> -->
                <!--     <ComboBox.ItemTemplate> -->
                <!--         <DataTemplate> -->
                <!--             <TextBlock Text="{Binding Display}" TextAlignment="Center"/> -->
                <!--         </DataTemplate> -->
                <!--     </ComboBox.ItemTemplate> -->
                <!-- </ComboBox> -->
                <TextBox Text="{Binding SpeedHackValue, StringFormat={}{0:0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding SpeedCheck, UpdateSourceTrigger=PropertyChanged}">SpeedHack</CheckBox>
            </StackPanel>
            <StackPanel Margin="5 155 0 0">
                <TextBox Text="{Binding FollowSpeedValue, StringFormat={}{0:0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding FollowBotsToggle, UpdateSourceTrigger=PropertyChanged}">Follow Bots</CheckBox>
            </StackPanel>
            
            <!-- <TextBlock Margin="2 170 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding }"/> -->
            <!-- <CheckBox Checked="AfkChecked" Unchecked="AfkUnChecked" Margin="65 160 0 0">Anti-AFK</CheckBox> -->
            <CheckBox Name="MapCheck" Content="Map Hack" IsChecked="{Binding MapCheck}" Command="{Binding MapCheckCommand}" CommandParameter="{Binding ElementName=MapCheck}" Margin="65 183 0 0"/>
            <CheckBox Name="ZoomCheck" Content="Zoom Hack" IsChecked="{Binding ZoomCheck}" Command="{Binding ZoomCheckCommand}" CommandParameter="{Binding ElementName=ZoomCheck}" Margin="65 208 0 0"/>
            <CheckBox Name="FovCheck" Content="Fov Hack" IsChecked="{Binding FovCheck}" Command="{Binding FovCheckCommand}" CommandParameter="{Binding ElementName=FovCheck}" Margin="65 233 0 0"/>
            <CheckBox Name="ChamsCheck" Content="Chams Monster" IsChecked="{Binding ChamsCheck}" Command="{Binding ChamsCheckCommand}" CommandParameter="{Binding ElementName=ChamsCheck}" Margin="65 258 0 0"/>
            <CheckBox Name="MiningCheck" Content="Insta-Mining" IsChecked="{Binding MiningCheck}" Command="{Binding MiningCheckCommand}" CommandParameter="{Binding ElementName=MiningCheck}" Margin="65 283 0 0"/>
            
            <Path Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="65 181">
                                    <PolyLineSegment Points="202 181"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
        </Grid>
        
        <StackPanel Margin="0 31 0 0" Visibility="{Binding SettingsPageVisibility}" Orientation="Vertical">
            <StackPanel>
                <TextBox Text="{Binding LocalPlayerPointer, UpdateSourceTrigger=PropertyChanged}" Width="105" Margin="2 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <Button Content="Find" Command="{Binding InvokeSearchWindowCommand}" Style="{StaticResource InvokeSearchWindowKey}"/>
            </StackPanel>
            
            <StackPanel Orientation="Vertical" Margin="0 5">
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Skip" Width="105"/>
                    <Button Name="SkipButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SkipButton}" Content="{Binding SkipButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Sprint" Width="105"/>
                    <Button Name="SprintButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SprintButton}" Content="{Binding SprintButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Sprint toggle" Width="105"/>
                    <Button Name="SprintToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SprintToggleButton}" Content="{Binding SprintToggleButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Jump" Width="105"/>
                    <Button Name="JumpButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=JumpButton}" Content="{Binding JumpButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Jump toggle" Width="105"/>
                    <Button Name="JumpToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=JumpToggleButton}" Content="{Binding JumpToggleButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="SH toggle" Width="105"/>
                    <Button Name="SpeedHackToggle" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SpeedHackToggle}" Content="{Binding SpeedHackToggle}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Bots NoClip" Width="105"/>
                    <Button Name="BotsNoClipToggle" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=BotsNoClipToggle}" Content="{Binding BotsNoClipToggle}"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        
        <StackPanel Margin="2 25 0 0" Orientation="Vertical" Visibility="{Binding BotsSettingsPageVisibility}">
            <Label Margin="7 -5 0 0" Content="Stop" Width="45" Style="{StaticResource LabelStandard}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <StackPanel Margin="10 0 0 0" Orientation="Vertical">
                <StackPanel Margin="0 -5 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Distance" Width="80"/>
                    <TextBox Text="{Binding Path=BotsStopDistance, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Margin="0 -12 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Type" Width="80"/>
                    <StackPanel Margin="0 8 0 0" Orientation="Vertical" Style="{StaticResource RadioButtonsPanel}">
                        <RadioButton IsChecked="{Binding FullStopState}" Content="Full stop" Command="{Binding BotsStopTypeSwitchCommand}" CommandParameter="0"/>
                        <RadioButton IsChecked="{Binding SlowStopState}" Content="Slow" Command="{Binding BotsStopTypeSwitchCommand}" CommandParameter="1"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Power" Width="80"/>
                    <TextBox Margin="0 5 0 0" Text="{Binding Path=BotsStopPower, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            <Path Margin="0 -122 0 0" Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure IsFilled="False" StartPoint="59 125">
                                    <PolyLineSegment Points="9 125 9 12 75 12"/>
                                </PathFigure>
                                <PathFigure IsFilled="False" StartPoint="139 125">
                                    <PolyLineSegment Points="189 125 189 12 122 12"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            
            <Label Margin="7 -10 0 0" Content="Warning" Width="80" Style="{StaticResource LabelStandard}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <StackPanel Margin="10 0 0 0" Orientation="Vertical">
                <StackPanel Margin="0 -12 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Status" Width="80"/>
                    <StackPanel Margin="0 8 0 0" Orientation="Vertical" Style="{StaticResource RadioButtonsPanel}">
                        <RadioButton IsChecked="{Binding BotsWarnOff}" Content="Off" Command="{Binding BotsWarnStatusSwitchCommand}" CommandParameter="0"/>
                        <RadioButton IsChecked="{Binding BotsWarnOn}" Content="On" Command="{Binding BotsWarnStatusSwitchCommand}" CommandParameter="1"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Distance" Width="80"/>
                    <TextBox Margin="0 5 0 0" Text="{Binding Path=BotsWarnDistance, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            <Path Margin="0 -95 0 0" Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure IsFilled="False" StartPoint="59 98">
                                    <PolyLineSegment Points="9 98 9 12 62 12"/>
                                </PathFigure>
                                <PathFigure IsFilled="False" StartPoint="139 98">
                                    <PolyLineSegment Points="189 98 189 12 135 12"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            
            <Label Margin="7 -6 0 0" Content="Follow" Width="80" Style="{StaticResource LabelStandard}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <StackPanel Margin="10 0 0 0" Orientation="Vertical">
                <StackPanel Margin="0 -12 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Type" Width="80"/>
                    <StackPanel Margin="-25 8 0 0" Orientation="Vertical" Style="{StaticResource RadioButtonsPanel}">
                        <RadioButton IsChecked="{Binding BotsFollowLocal}" Content="Local" Command="{Binding BotsFollowTypeSwitchCommand}" CommandParameter="0"/>
                        <RadioButton IsChecked="{Binding BotsFollowTarget}" Content="Target" Command="{Binding BotsFollowTypeSwitchCommand}" CommandParameter="1"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="0 -5 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Name" Width="80"/>
                    <TextBox Width="120" IsEnabled="{Binding BotsFollowLocal, Converter={StaticResource InverseBooleanConverter}}" Margin="-25 5 0 0" Text="{Binding Path=BotsFollowTargetName, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            <Path Margin="0 -95 0 0" Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure IsFilled="False" StartPoint="59 98">
                                    <PolyLineSegment Points="9 98 9 16 68 16"/>
                                </PathFigure>
                                <PathFigure IsFilled="False" StartPoint="139 98">
                                    <PolyLineSegment Points="189 98 189 16 129 16"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
        </StackPanel>
        
        <Grid Width="152" Height="130" Visibility="{Binding SearchWindowVisibility}" Margin="202 3 0 0" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Path Stroke="#1E1E1E" StrokeThickness="1" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="-1 4">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <PolyBezierSegment Points="-1 4 2 24 30 21 0 21 0 21 0 21"/>
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            <Rectangle Fill="#646464" Width="150" Height="84" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Border CornerRadius="0 5 5 0" BorderThickness="0 3 3 3" Margin="0 -2 0 0 " Width="152" Height="88" VerticalAlignment="Center">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                        <GradientStop Color="#1E1E1E" Offset="0" />
                        <GradientStop Color="#646464" Offset="1" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <TextBlock Margin="2 24 0 0" Text="X position:" FontSize="15" FontWeight="DemiBold"/>
            <TextBlock Margin="2 48 0 0" Text="World Id:" FontSize="15" FontWeight="DemiBold"/>
            <TextBox Text="{Binding XCoordinate, UpdateSourceTrigger=PropertyChanged}" Margin="75 24.5 0 0" Width="72" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBox Text="{Binding WorldId, UpdateSourceTrigger=PropertyChanged}" Margin="75 48.5 0 0" Width="72" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <Button Command="{Binding FindAddressCommand}" Style="{StaticResource FindKey}"/>
        </Grid>
    </Grid>
</Window>
