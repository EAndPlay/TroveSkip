<Window x:Class="TroveSkip.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TroveSkip"
        xmlns:viewModels="clr-namespace:TroveSkip.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Not a cheat" Width="354" Height="380"
        WindowStyle="None"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True"
        Background="Transparent"
        MouseDown="WindowMouseDown"
        Deactivated="WindowDeactivated">
    <!-- Left="{Binding LeftPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" -->
    <!-- Top="{Binding TopPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" -->
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <local:ComparisonConverter x:Key="ComparisonConverter"/>
        <!-- <local:InverseComparisonConverter x:Key="InverseComparisonConverter"/> -->
        <Style x:Key="CornerButtons" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="18" Height="18"
                                CornerRadius="20"
                                Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="HideButton" BasedOn="{StaticResource CornerButtons}" TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="RoyalBlue" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseButton" BasedOn="{StaticResource CornerButtons}" TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#B40000" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.175"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="FontSize" Value="14.5"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#8B8B8B"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="SelectionBrush" Value="#9835EF"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5 2 0 0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <!-- <Setter Property="Width" Value="140"/> -->
            <!-- <Setter Property="Height" Value="30"/> -->
            <!-- <Setter Property="Template"> -->
            <!--     <Setter.Value> -->
            <!--         <ControlTemplate> -->
            <!--             <Grid Name="CheckBoxGrid" Background="Pink"> -->
            <!--                 <Grid.ColumnDefinitions> -->
            <!--                     <ColumnDefinition Width="20"/> -->
            <!--                     <ColumnDefinition Width="Auto"/> -->
            <!--                 </Grid.ColumnDefinitions> -->
            <!--                 <Border Name="CheckBoxBorder" Grid.Column="0" Height="10" Width="10" Background="Black"> -->
            <!-- -->
            <!--                 </Border> -->
            <!-- -->
            <!--                 <Label Grid.Column="1" Content="{TemplateBinding CheckBox.Content}"/> -->
            <!--                 <Grid.Triggers> -->
            <!--                     <EventTrigger RoutedEvent="UIElement.MouseEnter"> -->
            <!--                         <BeginStoryboard> -->
            <!--                             <Storyboard> -->
            <!--                                 <ColorAnimation To="#236DFF" -->
            <!--                                                 Storyboard.TargetName="CheckBoxBorder" -->
            <!--                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" -->
            <!--                                                 FillBehavior="HoldEnd" -->
            <!--                                                 Duration="0:0:0"/> -->
            <!--                             </Storyboard> -->
            <!--                         </BeginStoryboard> -->
            <!--                     </EventTrigger> -->
            <!--                     <EventTrigger RoutedEvent="UIElement.MouseLeave"> -->
            <!--                         <BeginStoryboard> -->
            <!--                             <Storyboard> -->
            <!--                                 <ColorAnimation Storyboard.TargetName="CheckBoxBorder" -->
            <!--                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" -->
            <!--                                                 FillBehavior="HoldEnd" -->
            <!--                                                 Duration="0:0:0"/> -->
            <!--                             </Storyboard> -->
            <!--                         </BeginStoryboard> -->
            <!--                     </EventTrigger> -->
            <!--                     <EventTrigger RoutedEvent="UIElement.PreviewMouseDown"> -->
            <!--                         <BeginStoryboard> -->
            <!--                             <Storyboard> -->
            <!--                                 <ColorAnimation To="#FFF353" -->
            <!--                                                 Storyboard.TargetName="CheckBoxBorder" -->
            <!--                                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" -->
            <!--                                                 FillBehavior="HoldEnd" -->
            <!--                                                 Duration="0:0:0"/> -->
            <!--                             </Storyboard> -->
            <!--                         </BeginStoryboard> -->
            <!--                     </EventTrigger> -->
            <!--                 </Grid.Triggers> -->
            <!--             </Grid> -->
            <!--         </ControlTemplate> -->
            <!--     </Setter.Value> -->
            <!-- </Setter> -->
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Width" Value="192"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontFamily" Value="Lucida Sans"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style x:Key="WindowBorder" TargetType="Border">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Width" Value="202"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="CornerRadius" Value="10 10 0 0"/>
        </Style>
        <Style x:Key="SwitchButton" TargetType="Button">
            <Setter Property="Margin" Value="4 0 0 4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="55" Height="22"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#9835EF" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LabelStandard" TargetType="Label">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        <Style x:Key="NormalizedPanel" TargetType="StackPanel">
            <!-- <Setter Property="Label.Style" Value="{StaticResource LabelStandard}"/> -->
            <Setter Property="Label.HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Label.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Label.FontSize" Value="16"/>
            <Setter Property="Label.FontWeight" Value="SemiBold"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="-2 0 0 0"/>
            <Setter Property="Width" Value="96"/>
            <Setter Property="Height" Value="26.35"/>
            <Setter Property="Background" Value="#B995EF"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <Style x:Key="FindOffsetsButton" TargetType="Button">
            <Setter Property="Margin" Value="3 -1 0 0"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#BE0000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Red" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FindKey" TargetType="Button">
            <Setter Property="Content" Value="FIND"/>
            <Setter Property="Margin" Value="0 75 0 0"/>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#BE0000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Red" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="KeyBindButton" TargetType="Button">
            <Setter Property="Margin" Value="-2 0 0 0"/>
            <Setter Property="Width" Value="96"/>
            <Setter Property="Height" Value="26.35"/>
            <!-- <Setter Property="Background" Value="#B995EF"/> -->
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border Name="BUTTON_Border" Background="#B995EF" CornerRadius="3">
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Button.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation To="#DFCDFF" 
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                                FillBehavior="HoldEnd" 
                                                                Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Button.MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                                FillBehavior="HoldEnd" 
                                                                Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                            </Border>
                            <Label Margin="0 -2 0 0" Height="30" Content="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                <Label.Triggers>
                                    <EventTrigger RoutedEvent="Label.MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation To="#DFCDFF" 
                                                                Storyboard.TargetName="BUTTON_Border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                                FillBehavior="HoldEnd" 
                                                                Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Label.MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BUTTON_Border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                                FillBehavior="HoldEnd" 
                                                                Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Label.Triggers>
                            </Label>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="#FAFAFB" />
            <Setter Property="BorderBrush" Value="#EAEAEB" />
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="ToggleButton">
                     <Viewbox Stretch="Uniform">
                        <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                           <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                           <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                           <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                           <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                              <Ellipse.RenderTransform>
                                 <TranslateTransform X="0" Y="0" />
                              </Ellipse.RenderTransform>
                              <Ellipse.BitmapEffect>
                                 <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                              </Ellipse.BitmapEffect>
                           </Ellipse>
                        </Canvas>
                     </Viewbox>
                     <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                           <Trigger.EnterActions>
                              <BeginStoryboard>
                                 <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#52D468" Duration="0:0:0.2" />
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.2" />
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                       <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                       <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                 </Storyboard>
                              </BeginStoryboard>
                           </Trigger.EnterActions>
                           <Trigger.ExitActions>
                              <BeginStoryboard>
                                 <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                    <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                       <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                       <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                 </Storyboard>
                              </BeginStoryboard>
                           </Trigger.ExitActions>
                        </Trigger>
                     </ControlTemplate.Triggers>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>
         </Style>
        <!-- <Style x:Key="SliderRepeatButton" TargetType="RepeatButton"> -->
    <!--     <Setter Property="SnapsToDevicePixels" Value="true" /> -->
    <!--     <Setter Property="OverridesDefaultStyle" Value="true" /> -->
    <!--     <Setter Property="IsTabStop" Value="false" /> -->
    <!--     <Setter Property="Focusable" Value="false" /> -->
    <!--     <Setter Property="Template"> -->
    <!--         <Setter.Value> -->
    <!--             <ControlTemplate TargetType="RepeatButton"> -->
    <!--                 <Border BorderBrush="Black" Background="Black" Height="4"/> -->
    <!--             </ControlTemplate> -->
    <!--         </Setter.Value> -->
    <!--     </Setter> -->
    <!-- </Style> -->
    <!-- -->
    <!-- <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton"> -->
    <!--     <Setter Property="SnapsToDevicePixels" Value="true" /> -->
    <!--     <Setter Property="OverridesDefaultStyle" Value="true" /> -->
    <!--     <Setter Property="Template"> -->
    <!--         <Setter.Value> -->
    <!--             <ControlTemplate TargetType="RepeatButton"> -->
    <!--                 <Border SnapsToDevicePixels="True" Background="#59F3FF" Height="4"/> -->
    <!--             </ControlTemplate> -->
    <!--         </Setter.Value> -->
    <!--     </Setter> -->
    <!-- </Style> -->
    <!-- -->
    <!-- <Style x:Key="SliderThumb" TargetType="Thumb"> -->
    <!--     <Setter Property="SnapsToDevicePixels" Value="true" /> -->
    <!--     <Setter Property="OverridesDefaultStyle" Value="true" /> -->
    <!--     <Setter Property="Template"> -->
    <!--         <Setter.Value> -->
    <!--             <ControlTemplate TargetType="Thumb"> -->
    <!--                 <Border x:Name="Ellipse" Height="15" Width="10" CornerRadius="5" Background="#6496F0"/> -->
    <!--                 <ControlTemplate.Triggers> -->
    <!--                     <Trigger Property="IsMouseOver" Value="true"> -->
    <!--                         <Setter TargetName="Ellipse" Property="Background" Value="#4E7BFF"></Setter> -->
    <!--                     </Trigger> -->
    <!--                 </ControlTemplate.Triggers> -->
    <!--             </ControlTemplate> -->
    <!--         </Setter.Value> -->
    <!--     </Setter> -->
    <!-- </Style> -->
    <!-- -->
    <!-- <ControlTemplate x:Key="Slider" TargetType="Slider"> -->
    <!--     <Grid> -->
    <!--         <Grid.RowDefinitions> -->
    <!--             <RowDefinition Height="Auto" /> -->
    <!--             <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" /> -->
    <!--             <RowDefinition Height="Auto" /> -->
    <!--         </Grid.RowDefinitions> -->
    <!--         <Track Grid.Row="1" x:Name="PART_Track"> -->
    <!--             <Track.DecreaseRepeatButton> -->
    <!--                 <RepeatButton Style="{StaticResource SliderRepeatButton1}" Command="Slider.DecreaseLarge"/> -->
    <!--             </Track.DecreaseRepeatButton> -->
    <!--             <Track.Thumb> -->
    <!--                 <Thumb Style="{StaticResource SliderThumb}"/> -->
    <!--             </Track.Thumb> -->
    <!--             <Track.IncreaseRepeatButton> -->
    <!--                 <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge"/> -->
    <!--             </Track.IncreaseRepeatButton> -->
    <!--         </Track> -->
    <!--     </Grid>             -->
    <!-- </ControlTemplate> -->
    <!-- -->
    <!-- <Style x:Key="Horizontal_Slider" TargetType="Slider"> -->
    <!--     <Style.Triggers> -->
    <!--         <Trigger Property="Orientation" Value="Horizontal"> -->
    <!--             <Setter Property="Template" Value="{StaticResource Slider}"/> -->
    <!--         </Trigger> -->
    <!--     </Style.Triggers> -->
    <!--     ~1~ <Setter Property="Focusable" Value="False"/> @1@ -->
    <!--     ~1~ <Setter Property="SnapsToDevicePixels" Value="true"/> @1@ -->
    <!--     ~1~ <Setter Property="OverridesDefaultStyle" Value="true"/> @1@ -->
    <!--     ~1~ <Style.Triggers> @1@ -->
    <!--     ~1~     <Trigger Property="Orientation" Value="Horizontal"> @1@ -->
    <!--     ~1~         <Setter Property="MinHeight" Value="21"/> @1@ -->
    <!--     ~1~         <Setter Property="MinWidth" Value="104"/> @1@ -->
    <!--     ~1~         <Setter Property="Template" Value="{StaticResource Slider}"/> @1@ -->
    <!--     ~1~     </Trigger> @1@ -->
    <!--     ~1~ </Style.Triggers> @1@ -->
    <!-- </Style> -->
    </Window.Resources>
    <Grid>
        <Border Background="#646464" CornerRadius="0 0 10 10" Width="202" Margin="0 26 0 0" HorizontalAlignment="Left"/>
        <Border Style="{StaticResource WindowBorder}" MouseDown="DragWindow"/>
        <Button Command="{Binding HideWindowCommand}" Background="#6496F0" Margin="0 4 179 0" Style="{StaticResource HideButton}"/>
        <Button Command="{Binding CloseWindowCommand}" Background="Red" Margin="0 4 157 0" Style="{StaticResource CloseButton}"/>
        <Button Name="SwitchPage" Content="SETS" Command="{Binding SwitchPageCommand}" CommandParameter="{Binding ElementName=SwitchPage}" Background="#8233D4" Style="{StaticResource SwitchButton}"/>
        
        <Grid Visibility="{Binding MainPageVisibility}">
            <ComboBox IsEnabled="{Binding FollowApp, Converter={StaticResource InverseBooleanConverter}}" ItemsSource="{Binding Hooks, UpdateSourceTrigger=PropertyChanged, BindsDirectlyToSource=True}" SelectedItem="{Binding HookModel, UpdateSourceTrigger=PropertyChanged}" IsEditable="False" Margin="5 30 0 0" FocusVisualStyle="{x:Null}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Id}" TextAlignment="Center"/>
                            <TextBlock Text=" | " TextAlignment="Center"/>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center"/>
                            <!--<CheckBox Margin="0 0 0 0" IsChecked="{Binding IsBot}" HorizontalAlignment="Right"/> //  Command="{Binding IsBotChangedCommand}" CommandParameter="{RelativeSource Self}"/> -->
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            
            <CheckBox Content="Follow" IsChecked="{Binding FollowApp, UpdateSourceTrigger=PropertyChanged}" Width="72" Margin="130 55" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            
            <StackPanel Margin="5, 55, 0, 0">
                <TextBox Text="{Binding SkipValue, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Skip" FontSize="16" FontWeight="DemiBold" Margin="17 0 0 0"/>
            </StackPanel>
            <StackPanel Margin="5 82 0 0">
                <TextBox Text="{Binding SprintValue, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding SprintCheck, UpdateSourceTrigger=PropertyChanged}">Sprint</CheckBox>
            </StackPanel>
            <StackPanel Margin="5 105 0 0">
                <TextBox Text="{Binding JumpForceValue, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding JumpCheck, UpdateSourceTrigger=PropertyChanged}">Superjump</CheckBox>
            </StackPanel>
            <StackPanel Margin="5 130 0 0">
                <TextBox Text="{Binding SpeedHackValue, StringFormat={}{0:0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding SpeedCheck, UpdateSourceTrigger=PropertyChanged}">SpeedHack</CheckBox>
            </StackPanel>
            <StackPanel Margin="5 155 0 0">
                <TextBox Text="{Binding FollowSpeedValue, StringFormat={}{0:0}, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox IsChecked="{Binding FollowBotsToggle, UpdateSourceTrigger=PropertyChanged}">Follow Bots</CheckBox>
            </StackPanel>
            
            <!-- <TextBlock Margin="2 170 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding }"/> -->
            <!-- <CheckBox Checked="AfkChecked" Unchecked="AfkUnChecked" Margin="65 160 0 0">Anti-AFK</CheckBox> -->
            <!-- <CheckBox Name="MapCheck" Content="Map Hack" IsChecked="{Binding MapCheck}" Command="{Binding MapCheckCommand}" CommandParameter="{Binding ElementName=MapCheck}" Style="{StaticResource AnimatedSwitch}" Margin="65 183 0 0"/> -->
            <CheckBox Content="Map Hack" IsChecked="{Binding MapCheck}" Command="{Binding PatchCommand}" CommandParameter="{x:Static local:PatchName.MapHack}" Margin="65 183 0 0"/>
                <!-- <RadioButton IsChecked="{Binding Path=BotsSettings.FollowType, -->
            <!--              Converter={StaticResource ComparisonConverter},ConverterParameter={x:Static local:FollowType.Local}, -->
            <!--               UpdateSourceTrigger=PropertyChanged}" Content="Local"/> -->
            <CheckBox Content="Zoom Hack" IsChecked="{Binding ZoomCheck}" Command="{Binding PatchCommand}" CommandParameter="{x:Static local:PatchName.ZoomHack}" Margin="65 208 0 0"/>
            <!-- <CheckBox Name="FovCheck" Content="Fov Hack" IsChecked="{Binding FovCheck}" Command="{Binding FovCheckCommand}" CommandParameter="{Binding ElementName=FovCheck}" Margin="65 233 0 0"/> -->
            <!-- <CheckBox Name="ChamsCheck" Content="Chams Monster" IsChecked="{Binding ChamsCheck}" Command="{Binding ChamsCheckCommand}" CommandParameter="{Binding ElementName=ChamsCheck}" Margin="65 258 0 0"/> -->
            <CheckBox Content="Insta-Mining" IsChecked="{Binding MiningCheck}" Command="{Binding PatchCommand}" CommandParameter="{x:Static local:PatchName.InstaMining}" Margin="65 233 0 0"/>
            <CheckBox Content="No Graphics" IsChecked="{Binding NoGraphics}" Margin="65 258 0 0"/>
            <!-- <CheckBox Content="Anti-AFK" IsChecked="{Binding AntiAfkCheck}" Margin="65 333 0 0"/> -->
            <CheckBox Content="Auto-Loot" IsChecked="{Binding AutoLootCheck}" Command="{Binding PatchCommand}" CommandParameter="{x:Static local:PatchName.AutoLoot}" Margin="65 283 0 0"/>
            <CheckBox Content="Follow Camera" IsChecked="{Binding FollowCamera}" Margin="65 308 0 0"/>
            <CheckBox Content="Auto Pot" IsChecked="{Binding AutoPotCheck}" Margin="65 333 0 0"/>
            <CheckBox Content="Auto Attack" IsChecked="{Binding AutoAttackCheck}" Command="{Binding PatchCommand}" CommandParameter="{x:Static local:PatchName.AutoAttack}" Margin="65 358 0 0"/>
            <CheckBox IsChecked="{Binding SendECHeck}" Margin="5 180"/>
            
            <Path Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="65 181">
                                    <PolyLineSegment Points="202 181"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            
            <!-- test -->
            <!-- <Button Content="test" Margin="5 185 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/> -->
            
            <!-- <StackPanel Orientation="Vertical" Margin="65 308 0 0"> -->
            <!--     <CheckBox Content="Draw Dist" IsChecked="{Binding NoDrawDistance}"/> -->
            <!--     <Slider Value="{Binding SettingsSliderValue}" Style="{StaticResource Horizontal_Slider}" Height="20" Minimum="0" Maximum="210" Width="160" Margin="0 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/> -->
            <!-- </StackPanel> -->
        </Grid>

        <!--<StackPanel Margin="0 31 0 0" Visibility="Hidden" Orientation="Vertical">-->
        <StackPanel Margin="0 31 0 0" Visibility="{Binding SettingsPageVisibility}" Orientation="Vertical">
            <StackPanel>
                <TextBox Text="{Binding LocalPlayerOffset, UpdateSourceTrigger=PropertyChanged}" Width="105" Margin="2 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <!-- <Button Content="Find" Command="{Binding InvokeSearchWindowCommand}" Style="{StaticResource InvokeSearchWindowKey}"/> -->
                <Button Content="Find" Command="{Binding FindAddressCommand}" Style="{StaticResource FindOffsetsButton}"/>
            </StackPanel>
            
            <StackPanel Orientation="Vertical" Margin="0 5">
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Skip" Width="105"/>
                    <Button Name="SkipButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SkipButton}" Content="{Binding SkipButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Sprint" Width="105"/>
                    <Button Name="SprintButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SprintButton}" Content="{Binding SprintButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Sprint toggle" Width="105"/>
                    <Button Name="SprintToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SprintToggleButton}" Content="{Binding SprintToggleButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Jump" Width="105"/>
                    <Button Name="JumpButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=JumpButton}" Content="{Binding JumpButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <!-- <StackPanel Style="{StaticResource NormalizedPanel}"> -->
                <!--     <Label Content="Jump toggle" Width="105"/> -->
                <!--     <Button Name="JumpToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=JumpToggleButton}" Content="{Binding JumpToggleButton}" Style="{StaticResource KeyBindButton}"/> -->
                <!-- </StackPanel> -->
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="SH toggle" Width="105"/>
                    <Button Name="SpeedHackToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=SpeedHackToggleButton}" Content="{Binding SpeedHackToggleButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Bots NoClip" Width="105"/>
                    <Button Name="BotsNoClipToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=BotsNoClipToggleButton}" Content="{Binding BotsNoClipToggleButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Attack (Hold)" Width="105"/>
                    <Button Name="AttackHoldButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=AttackHoldButton}" Content="{Binding AttackHoldButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Follow Bots" Width="105"/>
                    <Button Name="FollowBotsToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=FollowBotsToggleButton}" Content="{Binding FollowBotsToggleButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Rotate Cam" Width="105"/>
                    <Button Name="RotateCameraToggleButton" Command="{Binding BindClickCommand}" CommandParameter="{Binding ElementName=RotateCameraToggleButton}" Content="{Binding RotateCameraToggleButton}" Style="{StaticResource KeyBindButton}"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <!--<StackPanel Margin="2 25 0 0" Orientation="Vertical" Visibility="Hidden">-->
        <StackPanel Margin="2 25 0 0" Orientation="Vertical" Visibility="{Binding BotsSettingsPageVisibility}">
            <!-- <CheckBox Content="Auto set bot" Margin="5 3 0 0" IsChecked="{Binding BotsSettings.AutoSetBot}"/> -->
            <Label Margin="7 -10 0 0" Content="Stop" Width="45" Style="{StaticResource LabelStandard}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <StackPanel Margin="10 0 0 0" Orientation="Vertical">
                <StackPanel Margin="0 -5 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Distance" Width="80"/>
                    <TextBox Text="{Binding Path=BotsSettings.StopDistance, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Margin="0 -12 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Type" Width="80"/>
                    <StackPanel Margin="0 8 0 0" Orientation="Vertical">
                        <RadioButton IsChecked="{Binding BotsSettings.StopType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:StopType.Slow}}" Content="Slow"/>
                        <RadioButton IsChecked="{Binding BotsSettings.StopType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:StopType.FullStop}}" Content="FullStop"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Power" Width="80"/>
                    <TextBox Margin="0 5 0 0" Text="{Binding Path=BotsSettings.StopPower, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            <Path Margin="0 -122 0 0" Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure IsFilled="False" StartPoint="59 125">
                                    <PolyLineSegment Points="9 125 9 12 75 12"/>
                                </PathFigure>
                                <PathFigure IsFilled="False" StartPoint="139 125">
                                    <PolyLineSegment Points="189 125 189 12 122 12"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            
            <Label Margin="7 -10 0 0" Content="Warning" Width="80" Style="{StaticResource LabelStandard}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <StackPanel Margin="10 0 0 0" Orientation="Vertical">
                <StackPanel Margin="0 -12 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Enabled" Width="80"/>
                    <CheckBox IsChecked="{Binding BotsSettings.WarnEnabled}" Margin="-2 8 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <!-- <StackPanel Margin="0 8 0 0" Orientation="Vertical" Style="{StaticResource RadioButtonsPanel}"> -->
                    <!--     <RadioButton IsChecked="{Binding BotsSettings.WarnEnabled}" Content="Off" Command="{Binding BotsWarnStatusSwitchCommand}" CommandParameter="0"/> -->
                    <!--     <RadioButton IsChecked="{Binding BotsSettings.WarnEnabled}" Content="On" Command="{Binding BotsWarnStatusSwitchCommand}" CommandParameter="1"/> -->
                    <!-- </StackPanel> -->
                </StackPanel>
                <StackPanel Style="{StaticResource NormalizedPanel}">
                    <Label Content="Distance" Width="80"/>
                    <TextBox Margin="0 5 0 0" Text="{Binding Path=BotsSettings.WarnDistance, StringFormat={}{0:0.0}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            
            <Path Margin="0 -95 0 0" Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure IsFilled="False" StartPoint="59 98">
                                    <PolyLineSegment Points="9 98 9 12 62 12"/>
                                </PathFigure>
                                <PathFigure IsFilled="False" StartPoint="139 98">
                                    <PolyLineSegment Points="189 98 189 12 135 12"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            
            <Label Margin="7 -6 0 0" Content="Follow" Width="80" Style="{StaticResource LabelStandard}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <StackPanel Margin="10 0 0 0" Orientation="Vertical">
                <StackPanel Margin="0 -12 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Type" Width="80"/>
                    <StackPanel Margin="-25 8 0 0" Orientation="Vertical">
                        <RadioButton IsChecked="{Binding Path=BotsSettings.FollowType,
                         Converter={StaticResource ComparisonConverter},ConverterParameter={x:Static local:FollowType.Local},
                          UpdateSourceTrigger=PropertyChanged}" Content="Local"/>
                        <RadioButton IsChecked="{Binding Path=BotsSettings.FollowType,
                         Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:FollowType.Target},
                          UpdateSourceTrigger=PropertyChanged}" Content="Target"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="0 -5 0 0" Style="{StaticResource NormalizedPanel}">
                    <Label Content="Name" Width="80"/>
                    <TextBox IsEnabled="{Binding BotsSettings.FollowType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:FollowType.Target}, UpdateSourceTrigger=PropertyChanged}" Width="120" Margin="-25 5 0 0" Text="{Binding Path=BotsFollowTargetName, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </StackPanel>
            <Path Margin="0 -95 0 0" Stroke="#1E1E1E" StrokeThickness="2" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure IsFilled="False" StartPoint="59 98">
                                    <PolyLineSegment Points="9 98 9 16 68 16"/>
                                </PathFigure>
                                <PathFigure IsFilled="False" StartPoint="139 98">
                                    <PolyLineSegment Points="189 98 189 16 129 16"/>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
        </StackPanel>
        
        <Grid Width="152" Height="130" Visibility="{Binding SearchWindowVisibility}" Margin="202 3 0 0" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Path Stroke="#1E1E1E" StrokeThickness="1" Fill="#1E1E1E">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="-1 4">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <PolyBezierSegment Points="-1 4 2 24 30 21 0 21 0 21 0 21"/>
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>
            <Rectangle Fill="#646464" Width="150" Height="84" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Border CornerRadius="0 5 5 0" BorderThickness="0 3 3 3" Margin="0 -2 0 0 " Width="152" Height="88" VerticalAlignment="Center">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                        <GradientStop Color="#1E1E1E" Offset="0" />
                        <GradientStop Color="#646464" Offset="1" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <TextBlock Margin="2 24 0 0" Text="X position:" FontSize="15" FontWeight="DemiBold"/>
            <TextBlock Margin="2 48 0 0" Text="World Id:" FontSize="15" FontWeight="DemiBold"/>
            <TextBox Text="{Binding XCoordinate, UpdateSourceTrigger=PropertyChanged}" Margin="75 24.5 0 0" Width="72" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <TextBox Text="{Binding WorldId, UpdateSourceTrigger=PropertyChanged}" Margin="75 48.5 0 0" Width="72" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <Button Command="{Binding FindAddressCommand}" Style="{StaticResource FindKey}"/>
        </Grid>

        <!-- <Grid Visibility="Hidden"> -->
        <Grid Visibility="{Binding BlockShitVisibility}">
            <Border CornerRadius="0 0 10 10" Background="#5B5B5B" Width="202" Height="348" Margin="0 26 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Grid Visibility="{Binding ConnectionGridVisibility}">
                <Border CornerRadius="0 0 10 10" Background="#80000000" Width="202" Height="348" Margin="0 26 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </Grid>
            <TextBlock Width="160" Margin="21 50 0 0" Foreground="Black" FontSize="18" FontFamily="Lucida Sans" Text="{Binding BlockText}" TextAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        </Grid>
    </Grid>
</Window>
